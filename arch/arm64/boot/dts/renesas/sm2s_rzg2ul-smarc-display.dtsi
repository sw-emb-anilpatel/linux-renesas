// SPDX-License-Identifier: GPL-2.0
/*
 * Device Tree Source for the RZG2UL Evaluation Board Kit
 *
 * Copyright (C) 2022 Renesas Electronics Corp.
 */

#include <dt-bindings/pinctrl/rzg2l-pinctrl.h>
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/net/ti-dp83867.h>

/*
 * If Display is enabled then SW_DISP_EN should be 1 otherwise 0.
 * Please change below MACROs corespondingly to SW1 setting
 */

#define	SW_DISP_EN	1
#define	WIFI_EN	1

/ {
	aliases {
		i2c0 = &i2c0;
		i2c1 = &i2c1;
		i2c2 = &i2c2;
		serial0 = &scif0;
		ethernet0 = &eth0;
	};

	chosen {
		bootargs = "ignore_loglevel";
		stdout-path = "serial0:115200n8";
	};

	audio_mclock: audio_mclock {
		compatible = "fixed-clock";
		#clock-cells = <0>;
		clock-frequency = <11289600>;
	};

        vmain_pd: regulator3 {
                compatible = "regulator-fixed";
                regulator-name = "vmain_pd";
                regulator-min-microvolt = <5000000>;
                regulator-max-microvolt = <5000000>;
                regulator-always-on;
                regulator-boot-on;
        };

        vcc_5v0: regulator2 {
                compatible = "regulator-fixed";
                regulator-name = "vcc_5v0";
                regulator-min-microvolt = <5000000>;
                regulator-max-microvolt = <5000000>;
                vin-supply = <&vmain_pd>;
                regulator-always-on;
                regulator-boot-on;
        };


	reg_1p8v: regulator0 {
		compatible = "regulator-fixed";

		regulator-name = "fixed-1.8V";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		regulator-boot-on;
		regulator-always-on;
	};

	reg_3p3v: regulator1 {
		compatible = "regulator-fixed";

		regulator-name = "fixed-3.3V";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-boot-on;
		regulator-always-on;
	};

	vbus0_usb2: regulator-vbus0-usb2 {
		compatible = "regulator-fixed";

		regulator-name = "USB20_VBUS0";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
	};

	snd_rzg2l: sound {
		compatible = "simple-audio-card";
                simple-audio-card,name = "sm2s-rzg2ul-card1";
		simple-audio-card,format = "i2s";
		simple-audio-card,bitclock-master = <&cpu_dai>;
		simple-audio-card,frame-master = <&cpu_dai>;
		simple-audio-card,mclk-fs = <256>;

                simple-audio-card,widgets =
                        "Headphone",    "Headphone Jack",
                        "Line", "Line In",
                        "Microphone",   "Microphone Jack";

                simple-audio-card,audio-routing = "Mic1", "Mic Bias 1",
                                                  "MIC1", "Mic 1",
                                                  "Headphone Jack", "HPL",
                                                  "Headphone Jack", "HPR",
                                                  "Speaker", "LINE",
                                                  "Ext Spk", "Line In",
                                                  "Line", "Mic Bias";

		cpu_dai: simple-audio-card,cpu {
			sound-dai = <&ssi3>;
		};

		codec_dai: simple-audio-card,codec {
			sound-dai = <&da7213_codec>;
		};
	};

        x1_clk: x1-clock {
                compatible = "fixed-clock";
                #clock-cells = <0>;
                clock-frequency = <24000000>;
        };


        clk_ext_audio_codec: clock-codec {
                compatible = "fixed-clock";
                #clock-cells = <0>;
                clock-frequency = <11288000>;
        };


        vdd_sd0: regulator-1 {
                compatible = "regulator-fixed";
                regulator-name = "vdd_sd0";
                regulator-min-microvolt = <3300000>;
                regulator-max-microvolt = <3300000>;
                regulator-boot-on;
		regulator-always-on;
                vin-supply = <&reg_3p3v>;
        };

#if WIFI_EN
/*
	bt_reset: bt-reset {
		compatible = "gpio-reset";
		reset-gpios = <&exp2 10 GPIO_ACTIVE_LOW>;  /* BT_EN_DEV */
/*		reset-delay-us = <1000>;
		#reset-cells = <0>;
	};
*/

	wlan_pwrseq: wlan_pwrseq {
		compatible = "mmc-pwrseq-simple";
		reset-gpios = <&exp2 11 GPIO_ACTIVE_LOW>;  /* WIFI_EN_DEV */
		clocks = <&osc_32k>;
                clock-names = "ext_clock";
		post-power-on-delay-ms = <80>;
	};

	vccq_sdhi0: regulator-vccq-sdhi0 {
		compatible = "regulator-fixed";
		regulator-name = "SDHI0 VccQ";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		vin-supply = <&ldo2>;
		regulator-always-on;
	};

	osc_32k: osc_32k {
                compatible = "fixed-clock";
                #clock-cells = <0>;
                clock-frequency = <32768>;
                clock-output-names = "osc_32k";
        };
#else
	/* For SD Card we use USH mode and use 1.8 V */
	vccq_sdhi0: regulator-vccq-sdhi0 {
		compatible = "regulator-fixed";
		regulator-name = "SDHI0 VccQ";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		vin-supply = <&ldo2>;
	};
#endif
	
	vring-ctl0@43000000 {
		compatible = "vring_uio";
		reg = <0x0 0x43000000 0x0 0x100000>;
		no-map;
	};

	vring-ctl1@43100000 {
		compatible = "vring_uio";
		reg = <0x0 0x43100000 0x0 0x100000>;
		no-map;
	};

	vring-shm0@43200000 {
		compatible = "shm_uio";
		reg = <0x0 0x43200000 0x0 0x300000>;
		no-map;
	};

	vring-shm1@43500000 {
		compatible = "shm_uio";
		reg = <0x0 0x43500000 0x0 0x300000>;
		no-map;
	};

	rsctbl@42f00000 {
		compatible = "shm_uio";
		reg = <0x0 0x42f00000 0x0 0x1000>;
		no-map;
	};

	mhu-shm@42f01000 {
		compatible = "shm_uio";
		reg = <0x0 0x42f01000 0x0 0x1000>;
		no-map;
	};

	mbox-uio@10400000 {
		compatible = "mbox_uio";
		reg = <0x0 0x10400000 0x0 0x1000>;
		interrupt-parent = <&gic>;
		interrupts = <GIC_SPI 75 IRQ_TYPE_LEVEL_HIGH>;
		status = "okay";
	};

	x1_clk: x1-clock {
		compatible = "fixed-clock";
		#clock-cells = <0>;
		clock-frequency = <24000000>;
	};

	clk_ext_camera: clk_ext_camera {
		compatible = "fixed-clock";
		#clock-cells = <0>;
		clock-frequency = <12000000>;
	};

	ov5645_vdddo_1v8: 1p8v {
		compatible = "regulator-fixed";
		regulator-name = "camera_vdddo";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		regulator-always-on;
	};

	ov5645_vdda_2v8: 2p8v {
		compatible = "regulator-fixed";
		regulator-name = "camera_vdda";
		regulator-min-microvolt = <2800000>;
		regulator-max-microvolt = <2800000>;
		regulator-always-on;
	};

	ov5645_vddd_1v5: 1p5v {
		compatible = "regulator-fixed";
		regulator-name = "camera_vddd";
		regulator-min-microvolt = <1500000>;
		regulator-max-microvolt = <1500000>;
		regulator-always-on;
	};
/*
        gpio-test-en-hog {
                gpio-hog;
                gpios = <&exp1 16 GPIO_ACTIVE_HIGH>;
                output-low;
                line-name = "gpio_test_en";
        };

	gpio-eth0-pwr-en-hog {
                gpio-hog;
                gpios = <&exp2 3 GPIO_ACTIVE_HIGH>;
                output-high;
                line-name = "gpio_eth0_pwr_en";
        };

	wifi-en-hog {
		gpio-hog;
		gpios = <&exp2 11 GPIO_ACTIVE_HIGH>;
		output-low;
		line-name = "wifi_en";
	};

	bt-en-hog {
		gpio-hog;
		gpios = <&exp2 10 GPIO_ACTIVE_HIGH>;
                output-low;
                line-name = "bt_en";
        };
*/

	panel {
                compatible = "panel-lvds";
                width-mm = <154>;
                height-mm = <93>;
                label = "WVGA (15:9)";
		data-mapping = "jeida-24";
                status = "okay";

                panel-timing {
                        clock-frequency = <75000000>;
                        hactive = <800>;
                        vactive = <480>;
                        hback-porch = <30>;
                        hfront-porch = <30>;
                        vback-porch = <4>;
                        vfront-porch = <4>;
                        hsync-len = <4>;
                        vsync-len = <4>;
                };

                port {
                        lcd_in0: endpoint {
                                remote-endpoint = <&du_out_rgb>;
                        };
                };
        };
};

&audio_clk1{
	clock-frequency = <11289600>;
};

&audio_clk2{
	clock-frequency = <12288000>;
};

&canfd {
	pinctrl-0 = <&canfd0_pins>;
	pinctrl-names = "default";
	status = "okay";
	channel0 {
		status = "okay";
	};
};

#if (SW_DISP_EN)

&du {
	pinctrl-0 = <&du_pins>;
	pinctrl-names = "default";
	status = "okay";

	ports {
		port@0 {
	                reg = <0>;
			du_out_rgb: endpoint {
	                        remote-endpoint = <&lcd_in0>;
			};
		};

	};
};

#else
	&ssi0 {
		pinctrl-0 = <&ssi0_pins>;
		pinctrl-names = "default";
		status = "okay";
	};
	
	&canfd {
		pinctrl-0 = <&canfd1_pins>;
		pinctrl-names = "default";
		status = "okay";
		channel1 {
			status = "okay";
		};
	};
#endif

&ehci0 {
	dr_mode = "otg";
	status = "okay";
};

&ehci1 {
	status = "okay";
};

&eth0 {
	pinctrl-0 = <&eth0_pins>;
	pinctrl-names = "default";
	phy-handle = <&phy0>;
	phy-mode = "rgmii-id";
	status = "okay";

	phy0: ethernet-phy@0 {
		compatible = "ethernet-phy-ieee802.3-c22";
		reg = <0>;
                ti,rx-internal-delay = <DP83867_RGMIIDCTL_2_00_NS>;
                ti,tx-internal-delay = <DP83867_RGMIIDCTL_2_00_NS>;
                ti,fifo-depth = <DP83867_PHYCR_FIFO_DEPTH_4_B_NIB>;
		ti,min-output-impedance;
	};
};


&hsusb {
	dr_mode = "otg";
	status = "okay";
};

&i2c0 {
	pinctrl-0 = <&i2c0_pins>;
	pinctrl-names = "default";
        clock-frequency = <400000>;
	status = "okay";

       module_eeprom@50 {
                compatible = "atmel,24c64";
                reg = <0x50>;
                pagesize = <32>;
        };

        module_eeprom@57 {
                compatible = "atmel,24c64";
                reg = <0x57>;
                pagesize = <32>;
        };

        da7213_codec: da7212@1a {
                #sound-dai-cells = <0>;
                compatible = "dlg,da7213";
                reg = <0x1a>;

                dlg,micbias1-lvl = <3000>;
                dlg,micbias2-lvl = <3000>;

                VDDA-supply = <&reg_1p8v>;
                VDDSP-supply = <&vcc_5v0>;
                VDDIO-supply = <&reg_1p8v>;
                VDDMIC-supply= <&reg_3p3v>;
                clocks = <&clk_ext_audio_codec>;
                clock-names = "mclk";
        };
};

&i2c1 {
	pinctrl-0 = <&i2c1_pins>;
	pinctrl-names = "default";
        clock-frequency = <400000>;

	status = "okay";

       module_eeprom@57 {
                compatible = "atmel,24c64";
                reg = <0x57>;
                pagesize = <32>;
       };
};

&i2c2 {
        #address-cells = <1>;
        #size-cells = <0>;
        pinctrl-names = "default";
        pinctrl-0 = <&i2c2_pins>;
        clock-frequency = <400000>;
        status="okay";


        pmic1: pmic@30 {
                compatible = "ricoh,rn5t567";
                reg = <0x30>;
                pmic-id = <0>;
                sleep-sequence = /bits/ 8 <
                                0x16    0x2b
                                0x17    0x49
                                0x1b    0x2b
                                0x1c    0x67
                                0x1f    0x0b
                                0x32    0x03
                                0x30    0x03
                        >;
                

                regulators {
                        dcdc1:DCDC1 {
                                regulator-name = "VCC_DRAM_VPU_0V9";
                                regulator-always-on;
                                regulator-min-microvolt = <900000>;
                                regulator-max-microvolt = <1200000>;
                        };
                        dcdc2:DCDC2 {
                                regulator-name = "VCC_ARM_0V9";
                                regulator-always-on;
                                regulator-min-microvolt = <3000000>;
                                regulator-max-microvolt = <3300000>;
                        };

                        dcdc3:DCDC3 {
                                regulator-name = "VCC_DDR_1V2";
                                regulator-always-on;
                                regulator-min-microvolt = <900000>;
                                regulator-max-microvolt = <1200000>;
                        };

                        dcdc4:DCDC4 {
                                regulator-name = "VCC_SYS_1V8";
                                regulator-always-on;
                                regulator-min-microvolt = <1600000>;
                                regulator-max-microvolt = <1800000>;
                        };

                        ldo1:LDO1 {
                                regulator-name = "VCC_PHY_2V5";
                                regulator-always-on;
                                regulator-min-microvolt = <2000000>;
                                regulator-max-microvolt = <2500000>;
                        };

#if WIFI_EN
                        ldo2:LDO2 {
                                regulator-name = "VCC_LDO2_3V3";
                                regulator-always-on;
                                regulator-min-microvolt = <3300000>;
                                regulator-max-microvolt = <3300000>;
                        };
#else
			/* For SD Card we use USH mode and use 1.8 V */
                        ldo2:LDO2 {
                                regulator-name = "VCC_LDO2_1V8";
                                regulator-always-on;
                                regulator-min-microvolt = <1800000>;
                                regulator-max-microvolt = <1800000>;
                        };
#endif
			ldo3:LDO3 {
                                regulator-name = "VCC_LDO3_1V0";
                                regulator-always-on;
                                regulator-min-microvolt = <900000>;
                                regulator-max-microvolt = <1000000>;
                        };

		};
	};

        exp1: gpio@22 {
                compatible = "ti,tca6424";
                reg = <0x22>;
                gpio-controller;
                #gpio-cells = <2>;
        };

        exp2: gpio@23 {
                compatible = "ti,tca6424";
                reg = <0x23>;
                gpio-controller;
                #gpio-cells = <2>;
        };

        tmp103: tmp103@75 {
                compatible = "ti,tmp103";
                reg = <0x75>;
        };

        sys_rtc: rtc@32 {
                compatible = "microcrystal,rv8803";
                reg = <0x32>;
        };

};

&i2c3 {
	clock-frequency = <400000>;
	pinctrl-0 = <&i2c3_pins>;
	pinctrl-names = "default";
	status = "okay";

	ov5640: ov5640@3c {
		compatible = "ovti,ov5640";
		reg = <0x3c>;
		clock-names = "xclk";
		clocks = <&clk_ext_camera>;
		clock-frequency = <12000000>;
		DOVDD-supply = <&ov5645_vdddo_1v8>;
		AVDD-supply = <&ov5645_vdda_2v8>;
		DVDD-supply = <&ov5645_vddd_1v5>;

		port {
			ov5645_to_csi: endpoint {
		       		clock-lanes = <0>;
		       		data-lanes = <1 2>;
		       		remote-endpoint = <&csi2_in>;
                 		bus-width = <8>;
		                hsync-active = <0>;
                		vsync-active = <1>;
		                pclk-sample = <0>;
	       		};
		};
	};
};

&ssi3 {
	    pinctrl-0 = <&ssi3_pins>;
	    pinctrl-names = "default";
	    status = "okay";
};

&usb2_phy0 {
	pinctrl-0 = <&usb0_pins>;
	pinctrl-names = "default";
	
	//Enable VBUS for USB0
	gpio = <&exp2 13 GPIO_ACTIVE_HIGH>;	
	
	vbus-supply = <&vbus0_usb2>;
	status = "okay";
};

&usb2_phy1 {
	/*pinctrl-0 = <&usb1_pins>;
	pinctrl-names = "default";*/

	status = "okay";
};


&spi0 {
	pinctrl-0 = <&spi0_pins>;
	pinctrl-names = "default";
	status = "okay";

	spidev@0x00 {
		compatible="winbond,w25q64dw","jedec,spi-nor";
		spi-max-frequency = <25000000>;
		reg = <0>;
	};
};


&spi2 {
        pinctrl-0 = <&spi2_pins>;
        pinctrl-names = "default";
        status = "okay";

        spidev@0x00 {
                compatible="winbond,w25q64dw","jedec,spi-nor";
                spi-max-frequency = <25000000>;
                reg = <0>;
        };


};

&scif0 {
	pinctrl-0 = <&scif0_pins>;
	pinctrl-names = "default";
	status = "okay";
};
	

&scif1 {
    pinctrl-0 = <&scif1_pins>;
    pinctrl-names = "default";
    uart-has-rtscts;
    status = "okay";
};

/* BT_UART */
&scif2 {
    pinctrl-0 = <&scif2_pins>;
    pinctrl-names = "default";
    uart-has-rtscts;
    /* resets = <&bt_reset>;*/
    status = "okay";

    bluetooth {
        compatible = "brcm,bcm43438-bt";
        shutdown-gpios = <&exp2 10 GPIO_ACTIVE_HIGH>;
        clocks = <&osc_32k>;
        clock-names = "extclk";
        max-speed = <2000000>;
    };

};


&scif4 {
    pinctrl-0 = <&scif4_pins>;
    pinctrl-names = "default";
    status = "okay";
};

//Comments:sci0 : M3 and M6 pins are used but Name is not verified with r9...It is serial.

&sci0 {
    pinctrl-0 = <&sci0_pins>;
    pinctrl-names = "default";
    status = "okay";
};
	
&phyrst {
	status = "okay";
};

&ohci0 {
	dr_mode = "otg";
	status = "okay";
};

&ohci1 {
	status = "okay";
};

&pinctrl {
	pinctrl-0 = <&sound_clk_pins>;
	pinctrl-names = "default";


	i2c2_pins: i2c2 {
               pinmux = <RZG2L_PORT_PINMUX(0, 3, 4)>, /* RIIC2_SCL */
                         <RZG2L_PORT_PINMUX(0, 2, 4)>; /*RIIC2_SDA*/
	};
	
	i2c3_pins: i2c3 {
               pinmux = <RZG2L_PORT_PINMUX(0, 1, 3)>, /* RIIC3_SCL */
                         <RZG2L_PORT_PINMUX(0, 0, 3)>; /*RIIC3_SDA*/
	};

	canfd0_pins: can0 {
		pinmux = <RZG2L_PORT_PINMUX(6, 1, 3)>, /* TX */
			 <RZG2L_PORT_PINMUX(6, 2, 3)>; /* RX */
	};

	eth0_pins: eth0 {
		pinmux = 
			 <RZG2L_PORT_PINMUX(4, 3, 1)>, /* ET0_MDC */
			 <RZG2L_PORT_PINMUX(4, 4, 1)>, /* ET0_MDIO */
			 <RZG2L_PORT_PINMUX(1, 0, 1)>, /* ET0_TXC */
			 <RZG2L_PORT_PINMUX(1, 1, 1)>, /* ET0_TX_CTL */
			 <RZG2L_PORT_PINMUX(1, 2, 1)>, /* ET0_TXD0 */
			 <RZG2L_PORT_PINMUX(1, 3, 1)>, /* ET0_TXD1 */
			 <RZG2L_PORT_PINMUX(1, 4, 1)>, /* ET0_TXD2 */
			 <RZG2L_PORT_PINMUX(2, 0, 1)>, /* ET0_TXD3 */
			 <RZG2L_PORT_PINMUX(3, 0, 1)>, /* ET0_RXC */
			 <RZG2L_PORT_PINMUX(3, 1, 1)>, /* ET0_RX_CTL */
			 <RZG2L_PORT_PINMUX(3, 2, 1)>, /* ET0_RXD0 */
			 <RZG2L_PORT_PINMUX(3, 3, 1)>, /* ET0_RXD1 */
			 <RZG2L_PORT_PINMUX(4, 0, 1)>, /* ET0_RXD2 */
			 <RZG2L_PORT_PINMUX(4, 1, 1)>; /* ET0_RXD3 */
	};

	i2c0_pins: i2c0 {
		pins = "RIIC0_SDA", "RIIC0_SCL";
		input-enable;
	};

	i2c1_pins: i2c1 {
		pins = "RIIC1_SDA", "RIIC1_SCL";
		input-enable;
	};


/*
#if WIFI_EN
//For WiFi
	sdhi0_pins: sd0 {
		sd0_data {
			pins =  "SD0_DATA0", "SD0_DATA1", "SD0_DATA2",
				"SD0_DATA3";
			power-source  = <3300>;
		};

		sd0_ctrl {
			pins = "SD0_CLK", "SD0_CMD";
			power-source = <3300>;
		};
	};
#else

//For SD Card
	sdhi0_pins: sd0 {
		sd0_data {
			pins =  "SD0_DATA0", "SD0_DATA1", "SD0_DATA2",
				"SD0_DATA3";
			power-source  = <1800>;
		};

		sd0_ctrl {
			pins = "SD0_CLK", "SD0_CMD";
			power-source = <1800>;
		};
	};
#endif
*/
	/* Support pinctrl for uSD / Wifi */
	sdhi0_pins: sd0 {
		sd0_data {
			pins =  "SD0_DATA0", "SD0_DATA1", "SD0_DATA2",
				"SD0_DATA3";
			power-source  = <3300>;
		};

		sd0_ctrl {
			pins = "SD0_CLK", "SD0_CMD";
			power-source = <3300>;
		};
	};

	/* Support pinctrl for UHS uSD */
	sdhi0_pins_uhs: sd0_uhs {
		sd0_data_uhs {
			pins =	"SD0_DATA0", "SD0_DATA1", "SD0_DATA2",
				"SD0_DATA3";
			power-source  = <1800>;
		};

		sd0_ctrl_uhs {
			pins = "SD0_CLK", "SD0_CMD";
			power-source  = <1800>;
		};
	};

	
// For MMC
	sdhi1_pins: sd1 {
		sd1_data {
			pins =	"SD1_DATA0", "SD1_DATA1",
				"SD1_DATA2", "SD1_DATA3";
			power-source  = <1800>;
		};

		sd1_ctrl {
			pins = "SD1_CLK", "SD1_CMD";
			power-source  = <1800>;
		};
	};
	
	
#if (SW_DISP_EN)

	du_pins: du {
		data {

			pinmux = <RZG2L_PORT_PINMUX(13, 0, 6)>,
				 <RZG2L_PORT_PINMUX(13, 4, 6)>,
				 <RZG2L_PORT_PINMUX(13, 3, 6)>,
				 <RZG2L_PORT_PINMUX(12, 1, 6)>,
				 <RZG2L_PORT_PINMUX(13, 2, 6)>,
				 <RZG2L_PORT_PINMUX(14, 0, 6)>,
				 <RZG2L_PORT_PINMUX(16, 0, 6)>,
				 <RZG2L_PORT_PINMUX(15, 0, 6)>,
				 <RZG2L_PORT_PINMUX(16, 1, 6)>,
				 <RZG2L_PORT_PINMUX(15, 1, 6)>,
				 <RZG2L_PORT_PINMUX(15, 3, 6)>,
				 <RZG2L_PORT_PINMUX(18, 0, 6)>,
				 <RZG2L_PORT_PINMUX(17, 2, 6)>,
				 <RZG2L_PORT_PINMUX(17, 1, 6)>,
				 <RZG2L_PORT_PINMUX(18, 1, 6)>,
				 <RZG2L_PORT_PINMUX(18, 2, 6)>,
				 <RZG2L_PORT_PINMUX(17, 3, 6)>,
				 <RZG2L_PORT_PINMUX(18, 3, 6)>;
			 drive-strength = <2>;
		};

		sync {
			pinmux = <RZG2L_PORT_PINMUX(11, 0, 6)>, /* HSYNC */
				 <RZG2L_PORT_PINMUX(12, 0, 6)>; /* VSYNC */
	                  	 drive-strength = <2>;
		};

		de {
			pinmux = <RZG2L_PORT_PINMUX(11, 1, 6)>; /* DE */
				 drive-strength = <2>;
		};
		
		clk {
			pinmux = <RZG2L_PORT_PINMUX(11, 3, 6)>; /* CLK */
		};
	};
#else
	ssi0_pins: ssi0 {
		pinmux = <RZG2L_PORT_PINMUX(11, 0, 1)>, /* SSI0_BCK */
			 <RZG2L_PORT_PINMUX(11, 1, 1)>, /* SSI0_RCK */
			 <RZG2L_PORT_PINMUX(11, 2, 1)>, /* SSI0_TXD */
			 <RZG2L_PORT_PINMUX(11, 3, 1)>; /*SSI0_RXD*/

	};
	
	canfd1_pins: can1 {
		pinmux = <RZG2L_PORT_PINMUX(14, 0, 3)>, 
			 <RZG2L_PORT_PINMUX(14, 1, 3)>; 
	};

#endif
	
	ssi3_pins: ssi3 {
		       pinmux = <RZG2L_PORT_PINMUX(10, 1, 3)>, /* SSI3_BCK */
		                 <RZG2L_PORT_PINMUX(10, 2, 3)>, /*SSI3_RCK*/
		                 <RZG2L_PORT_PINMUX(10, 3, 3)>, /*SSI3_TXD*/
		                 <RZG2L_PORT_PINMUX(10, 4, 3)>; /*SSI3_RXD*/
	};


	sound_clk_pins: sound_clk {
		pins = "AUDIO_CLK1", "AUDIO_CLK2";
		input-enable;
	};


	usb0_pins: usb0 {
		pinmux = /*<RZG2L_PORT_PINMUX(5, 0, 1)>,
			 <RZG2L_PORT_PINMUX(5, 2, 1)>,
			 <RZG2L_PORT_PINMUX(5, 3, 1)>;*/ /* OTG_ID */
			 <RZG2L_PORT_PINMUX(5, 2, 1)>; /* OVC */
	};

	usb1_pins: usb1 {
		pinmux = <RZG2L_PORT_PINMUX(6, 0, 1)>;
	};



	spi0_pins: rspi0 {
		       pinmux = <RZG2L_PORT_PINMUX(9, 0, 2)>, /* RSPI0_CK */
		                 <RZG2L_PORT_PINMUX(9, 1, 2)>, /*RSPI0_MOSI*/
		                 <RZG2L_PORT_PINMUX(9, 2, 2)>, /*RSPI0_MISO*/
		                 <RZG2L_PORT_PINMUX(9, 3, 2)>; /*RSPI0_SSL*/
	};


	spi2_pins: rspi2 {
		       pinmux = <RZG2L_PORT_PINMUX(7, 0, 3)>, /* RSPI2_CK */
		                 <RZG2L_PORT_PINMUX(7, 1, 3)>, /*RSPI2_MOSI*/
		                 <RZG2L_PORT_PINMUX(7, 2, 3)>, /*RSPI2_MISO*/
		                 <RZG2L_PORT_PINMUX(7, 3, 3)>; /*RSPI2_SSL*/
	};

	qspi0_pins: qspi0 {
		qspi0-data {
			pins = "QSPI0_IO0", "QSPI0_IO1", "QSPI0_IO2", "QSPI0_IO3";
			power-source = <3300>;
		};

		qspi0-ctrl {
			pins = "QSPI0_SPCLK", "QSPI0_SSL";
			power-source = <3300>;
		};
	};
	
	scif0_pins: scif0 {
			pinmux = <RZG2L_PORT_PINMUX(6, 4, 6)>, /* TxD */
				 <RZG2L_PORT_PINMUX(6, 3, 6)>; /* RxD */
	};


	scif1_pins: scif1 {
		       pinmux = <RZG2L_PORT_PINMUX(8, 0, 3)>, /* SCIF1_RXD */
		                 <RZG2L_PORT_PINMUX(8, 1, 3)>,/*SCIF1_TXD*/
		                 <RZG2L_PORT_PINMUX(8, 2, 3)>, /*SCIF1_CTS*/
		                 <RZG2L_PORT_PINMUX(8, 3, 3)>; /*SCIF1_RTS*/
	};



	scif2_pins: scif2 {
		       pinmux = <RZG2L_PORT_PINMUX(5, 0, 2)>, /* SCIF2_TXD */
		                 <RZG2L_PORT_PINMUX(5, 1, 2)>, /*SCIF2_RXD*/
		                 <RZG2L_PORT_PINMUX(5, 3, 2)>, /*SCIF2_CTS*/
		                 <RZG2L_PORT_PINMUX(5, 4, 2)>; /*SCIF2_RTS*/
	};


	scif4_pins: scif4 {
		       pinmux = <RZG2L_PORT_PINMUX(18, 4, 7)>, /* SCIF4_RXD */
		                 <RZG2L_PORT_PINMUX(18, 5, 7)>; /*SCIF4_TXD*/
	};
	
	sci0_pins: sci0 {
               pinmux =  <RZG2L_PORT_PINMUX(2, 2, 5)>, /*SCI0_TXD*/
                         <RZG2L_PORT_PINMUX(2, 3, 5)>; /* SCI0_RXD*/ 
	};

	mtu7_pins:mtu7 {
	               pinmux =  <RZG2L_PORT_PINMUX(6, 0, 5)>;
	};

};


&sbc {
	pinctrl-0 = <&qspi0_pins>;
	pinctrl-names = "default";

	status = "okay";

	flash@0 {
		compatible = "micron,mt25qu512a", "jedec,spi-nor";
		reg = <0>;
		m25p,fast-read;
		spi-max-frequency = <50000000>;
		spi-tx-bus-width = <1>;
		spi-rx-bus-width = <4>;

		partitions {
			compatible = "fixed-partitions";
			#address-cells = <1>;
			#size-cells = <1>;

			partition@000000 {
				label = "bl2";
				reg = <0x00000000 0x0001D200>;
				read-only;
			};
			partition@01D200 {
				label = "fip";
				reg = <0x0001D200 0x001C2E00>;
				read-only;
			};
			partition@1E0000 {
				label = "env";
				reg = <0x001E0000 0x00020000>;
				read-only;
			};
			partition@200000 {
				label = "test-area";
				reg = <0x00200000 0x00E00000>;
			};
		};
	};
};


#if WIFI_EN
//WiFi
&sdhi0 {
	#address-cells = <1>;
	#size-cells = <0>;
	pinctrl-0 = <&sdhi0_pins>;
	pinctrl-names = "default";
	vmmc-supply = <&vdd_sd0>;
	vqmmc-supply = <&vccq_sdhi0>;
	bus-width = <4>;
	no-1-8-v;	/* force 3.3V VIO */
	non-removable;
	disable-wp;
	mmc-pwrseq = <&wlan_pwrseq>;
	pm-ignore-notify;
	cap-power-off-card;
	/* WiFi firmware requires power to be kept while in suspend */
        keep-power-in-suspend;

	status = "okay";

	brcmf: bcrmf@1 {
		reg = <1>;
		compatible = "brcm,bcm4329-fmac";
	};
};
#else
//SD Card
&sdhi0 {
	pinctrl-0 = <&sdhi0_pins>;
	pinctrl-1 = <&sdhi0_pins_uhs>;
	pinctrl-names = "default", "state_uhs";
	
	vmmc-supply = <&vdd_sd0>;
	vqmmc-supply = <&vccq_sdhi0>;
	bus-width = <4>;
	sd-uhs-sdr50;
	sd-uhs-sdr104;
	status = "okay";
	disable-wp;
};
#endif

//eMMC
&sdhi1 {
        pinctrl-0 = <&sdhi1_pins>;
        pinctrl-1 = <&sdhi1_pins>;
        pinctrl-names = "default", "state_uhs";

        vmmc-supply = <&reg_3p3v>;
        vqmmc-supply = <&reg_1p8v>;
        bus-width = <4>;
        mmc-hs200-1_8v;
        non-removable;
        fixed-emmc-driver-type = <1>;
        status = "okay";
};

&extal_clk {
	clock-frequency = <24000000>;
};

&cru {
	status = "okay";
};

&csi2 {
	status = "okay";

	ports {
		port {
			csi2_in: endpoint {
				clock-lanes = <0>;
				data-lanes = <1 2>;
				remote-endpoint = <&ov5645_to_csi>;
			};
		};
	};
};

&wdt0 {
	status = "okay";
	timeout-sec = <60>;
};

&wdt2 {
	status = "okay";
	timeout-sec = <60>;
};

&ostm1 {
	status = "okay";
};

&ostm2 {
	status = "disabled";
};

&mtu3 {
	pinctrl-0 = <&mtu7_pins>;
	pinctrl-names = "default";
	pwm_mode1 = <7 0>;
	pwm_complementary = <7 0>;
        #pwm-cells = <2>;
        clocks = <&cpg CPG_MOD R9A07G043_MTU_X_MCK_MTU3>;
        clock-names = "fck";
	/*pwm-params = <MTU_PWM_NORMAL 0 50>;*/
	status = "okay";
};

